en:
  backtotrainings:
    text: Back to trainings.
    link: /en/trainings
  cleancode:
    title: Clean Code
    icon: wrap_text
    description: Understandable and structured code increases team productivity and reduces maintenance costs. Recent studies show that the time spent to read and interpret professional code is ten times more than the one spent in order to write it. <br /><br />The true goal of Clean Code is to follow a series of principles and well known practices that will reduce considerably the read-write ratio, This way, companies, projects and development teams can move forward much faster, reduce the number of bugs to almost unexistant and reach their goals earlier, while at the same time ensuring a much more stable and resilient code.
    advantages:
      title: Advantages
      points:
        - Reduce considerably code review time
        - No more debugging and bug fixing time
        - Release products and features quicker
        - Increase your long term productivity
    features:
      title: Features
      points:
        - Concepts and principles
        - Basic and advance techniques with sample code and hands-on examples
        - Practice solving challenges in groups
        - Total duration of 8 hours including breaks
    structure:
      title: Structure
      points:
        - Importance and reasons why Clean Code should be encouraged
        - Class structure for object oriented programming languages
        - Relevance behind every variable and method name
        - Ideal number of method arguments
        - Level of abstraction through problem solving
        - Exception control
        - How to handle methods that don’t return expected values
        - Class responsibilities in object oriented programming languages
        - Conditional statements simplification with preconditions and polymorphism
        - Getting rid of comments
        - Clean Code in unit testing
    bottomline: Clean Code is so cool, man.
  powercoding:
    title: Power Coding
    icon: code
    description: Design principles and patterns to create the best quality code. Reach your goals faster and avoid bugs.
    advantages:
      title: Advantages
      points:
        - Produce high quality code
        - Save developing time applying renown common code solutions
        - Avoid bugs
        - Release new features quicker
        - Increase your long term productivity
    features:
      title: Features
      points:
        - State of art code design principles
        - Advance code design patterns with sample code and hands-on examples
        - Practice solving challenges in groups
        - Total duration of 8 hours including breaks
    structure:
      title: Structure
      points:
        - Importance and reasons why Power Coding should be encouraged
        - How to determine wich design principles to apply
        - Worldwide renown design principles
        - State of art S.O.L.I.D. design principles
        - How to apply design patterns in an enterprise environment
        - Most effective design patterns
    bottomline: Power Coding is so cool, man.
  java8:
    title: Java 8
    icon: free_breakfast
    description: The latest features of Java 8 will increase your security, flexibility and development speed.
    advantages:
      title: Advantages
      points:
        - Reduce considerably code review time
        - No more debugging and bug fixing time
        - Release products and features quicker
        - Increase your productivity
    features:
      title: Features
      points:
        - Concepts and principles
        - Basic and advance techniques with sample code and hands-on examples
        - Practice solving challenges in groups
        - Total duration of 8 hours including breaks
    structure:
      title: Structure
      points:
        - Importance and reasons why Clean Code should be encouraged
        - Class structure for object oriented programming languages
        - Relevance behind every variable and method name
        - Ideal number of method arguments
        - Level of abstraction through problem solving
        - Exception control
        - How to handle methods that don’t return expected values
        - Class responsibilities in object oriented programming languages
        - Conditional statements simplification with preconditions and polymorphism
        - Getting rid of comments
        - Clean Code in unit testing
    bottomline: Java 8 is so cool, man.
  springboot:
    title: Spring Boot
    icon: layers
    description: Spring Boot is a secure and reliable open source framework. Reach your goals at a lightning speed and secure them with the strongest security.
    advantages:
      title: Advantages
      points:
        - Reduce considerably code review time
        - No more debugging and bug fixing time
        - Release products and features quicker
        - Increase your productivity
    features:
      title: Features
      points:
        - Concepts and principles
        - Basic and advance techniques with sample code and hands-on examples
        - Practice solving challenges in groups
        - Total duration of 8 hours including breaks
    structure:
      title: Structure
      points:
        - Importance and reasons why Clean Code should be encouraged
        - Class structure for object oriented programming languages
        - Relevance behind every variable and method name
        - Ideal number of method arguments
        - Level of abstraction through problem solving
        - Exception control
        - How to handle methods that don’t return expected values
        - Class responsibilities in object oriented programming languages
        - Conditional statements simplification with preconditions and polymorphism
        - Getting rid of comments
        - Clean Code in unit testing
    bottomline: Spring Boot is so cool, man.
  continuousdeployment:
    title: Continuous Deployment
    icon: all_inclusive
    description: Save countless hours of testing and go-live processes. Do it all automatically with just one click combining a set of professional tools.
    advantages:
      title: Advantages
      points:
        - Reduce considerably code review time
        - No more debugging and bug fixing time
        - Release products and features quicker
        - Increase your productivity
    features:
      title: Features
      points:
        - Concepts and principles
        - Basic and advance techniques with sample code and hands-on examples
        - Practice solving challenges in groups
        - Total duration of 8 hours including breaks
    structure:
      title: Structure
      points:
        - Importance and reasons why Clean Code should be encouraged
        - Class structure for object oriented programming languages
        - Relevance behind every variable and method name
        - Ideal number of method arguments
        - Level of abstraction through problem solving
        - Exception control
        - How to handle methods that don’t return expected values
        - Class responsibilities in object oriented programming languages
        - Conditional statements simplification with preconditions and polymorphism
        - Getting rid of comments
        - Clean Code in unit testing
    bottomline: Continuous Deployment is so cool, man.
  microservices:
    title: Microservices
    icon: cloud_circle
    description: Get ready for your business growth. Prepare your system for scaling with an introduction to the microservices architecture with practical examples.
    advantages:
      title: Advantages
      points:
        - Reduce considerably code review time
        - No more debugging and bug fixing time
        - Release products and features quicker
        - Increase your productivity
    features:
      title: Features
      points:
        - Concepts and principles
        - Basic and advance techniques with sample code and hands-on examples
        - Practice solving challenges in groups
        - Total duration of 8 hours including breaks
    structure:
      title: Structure
      points:
        - Importance and reasons why Clean Code should be encouraged
        - Class structure for object oriented programming languages
        - Relevance behind every variable and method name
        - Ideal number of method arguments
        - Level of abstraction through problem solving
        - Exception control
        - How to handle methods that don’t return expected values
        - Class responsibilities in object oriented programming languages
        - Conditional statements simplification with preconditions and polymorphism
        - Getting rid of comments
        - Clean Code in unit testing
    bottomline: Microservices are so cool, man.
de:
  - title: Clean Code
    icon: wrap_text
    description: Verständlicher und strukturierter Code erhöht die Produktivität des Teams und reduziert gleichzeitig die Wartungskosten.
    topics: Clean code Praxis, Test-Driven development
  - title: Power Coding
    icon: code
    description: Design-Prinzipien und Patterns, um den besten Qualitätscode zu schaffen. Erreichen Sie Ihre Ziele schneller und vermeiden Sie Bugs.
    topics: Design-Prinzipien, Design-Patterns.
  - title: Java 8
    icon: free_breakfast
    description: Die neuesten Features von Java 8 erhöhen Ihre Sicherheit, Flexibilität und Entwicklungsgeschwindigkeit.
    topics: Streams, Lambda expressions, Function composition, LocalDateTime
  - title: Spring Boot
    icon: layers
    description: Spring Boot ist ein sicheres und zuverlässiges Open Source Framework. Erreichen Sie Ihre Ziele blitzschnell und schützen Sie diese mit den modernsten Sicherheitsmaßnahmen.
    topics: Spring Boot, Data, Security, Rest, Thymeleaf
  - title: Continuous Deployment
    icon: all_inclusive
    description: Sparen Sie sich unzählige Stunden der Test- und Go-Live-Prozesse. Kombinieren Sie eine Reihe von professionellen Tools. Machen Sie alles automatisch mit nur einem Klick.
    topics: Spring Boot, Docker, GitHub, Circle-CI, DockerHub, Rancher
  - title: Microservices
    icon: cloud_circle
    description: Machen Sie sich bereit für Ihr Geschäftswachstum. Bereiten Sie Ihr System für die Zukunft vor mit einer Einführung in die Microservices Architektur.
    topics: Spring Boot, Spring Cloud, Docker, Docker Compose, Kafka

es:
  - title: Clean Code
    icon: wrap_text
    description: Un código estructurado y entendible incrementa la productividad del equipo de desarrollo y reduce costes de mantenimiento.
    topics: Código limpio, Desarrollo Test Driven
  - title: Power Coding
    icon: code
    description: Principios y patrones de desarrollo para crear el código de mejor calidad. Alcanza tus objetivos de largo plazo más rápido y evita bugs.
    topics: Principios de desarrollo, Patrones de desarrollo.
  - title: Java 8
    icon: free_breakfast
    description: Las últimas características de Java 8 incrementarán tu seguridad, flexibilidad y velocidad de desarrollo.
    topics: Streams, Expresiones Lambda, Composición de funciones, LocalDateTime
  - title: Spring Boot
    icon: layers
    description: Spring Boot es un framework seguro y de confianza. Alcanza tus objetivos a la velocidad de la luz y protégelos con una seguridad blindada.
    topics: Spring Boot, Data, Security, Rest, Thymeleaf
  - title: Integración Contínua
    icon: all_inclusive
    description: Evita horas interminables de testeo y paso a producción. Simplifícalo todo automáticamente con un único click combinando varias herramientas profesionales.
    topics: Spring Boot, Docker, GitHub, Circle-CI, DockerHub, Rancher
  - title: Microservicios
    icon: cloud_circle
    description: Prepara tu software para el crecimiento de tu empresa con una introducción práctica a los microservicios.
    topics: Spring Boot, Spring Cloud, Docker, Docker Compose, Kafka
